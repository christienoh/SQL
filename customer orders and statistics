#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

------------
--Q: What kind of data does the customer table include?
--Answer: order_id, acctnum
SELECT *
FROM customers limit 20;

--Q: What columns are in the JanSales table?
--A: orderID, Product, Quantity, price, orderdate, location
SELECT * from JanSales limit 20;

--Q: What column(s) do the customers table and the JanSales table have in common?
--A: orderID
SELECT * FROM customers
WHERE length(order_id) = 6
AND order_id <> 'Order ID';

--How many orders were placed in January?
--Answer: 9681 orders were placed in January
SELECT count(orderid) as 'Total January Orders'
FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?
--Answer: 379 orders were for an iPhone
SELECT count(orderID) 
FROM JanSales
WHERE Product = 'iPhone'
  AND length(orderid) = 6
  AND orderid <> 'Order ID';

--Select the customer account numbers for all orders placed in February
SELECT distinct customers.acctnum
FROM FebSales
LEFT JOIN customers
ON FebSales.orderID = customers.order_id
   length(orderid) = 6
  AND orderid <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
--Answer: AAA Batteries (4-pack), 2.99
SELECT distinct Product, min(price)
FROM JanSales
GROUP BY Product, price
ORDER BY price
LIMIT 1;

--What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT product,
    price*sum(Quantity) as revenue
FROM JanSales
where product <> ''
GROUP BY Product;

***PICK BACK UP HERE***
--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, sum(Quantity) as Quantity,
       sum(Quantity)*price as Revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
group by product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct customers.acctnum),
       avg(Quantity*price),
FROM FebSales
  LEFT JOIN customers
ON FebSales.orderid=customers.order_id
WHERE FebSales.Quantity>2
group by orderID;

--Charlotte answer; need to add "count (distinct)" to get a total (not sum, as that would add up the account numbers), left join b/c we want all the info from febsales and only the acctnum from customers, adding "distinct" removes any duplicate account numbers and the Where and And statements remove any incorrect order ids or blank ids
select
    count(distinct cust.acctnum),
    avg(quantity*price)
FROM FebSales Feb
         LEFT JOIN customers cust

--List all the products sold in Los Angeles in February, and include how many of each were sold.
select Product,sum(Quantity)
from FebSales
where location like '%Los Angeles%'
group by Product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).
select distinct location, count(orderID)
from JanSales
where location like '%NY%'
  and length(orderid) = 6
  and orderID <> 'Order ID'
group by location
having count(orderID) >= 3;

--How many of each type of headphone were sold in February?
SELECT Product, sum(Quantity) as quantity
FROM FebSales
WHERE Product like '%headphone%'
group by Product;

--What was the average amount spent per account in February?
--Hints: For this question, we want the average amount spent / number of accounts, not the amount spent by each account. To multiply, you can use the * symbol, and to divide, you can use the / symbol.)
SELECT DISTINCT(acctnum)/AVG(price*Quantity)
FROM FebSales
LEFT JOIN customers
ON FebSales.orderID = customers.order_id
WHERE Product <> ''
GROUP BY acctnum;

--Charlotte Answers; need to SUM the amount spent; add the filters for order ID; didn't ask for Product, so don't include it
SELECT sum(quantity*price)/count(cust.acctnum)
FROM FebSales Feb
LEFT JOIN customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

        # OR #

SELECT avg(quantity*price)
FROM FebSales Feb
LEFT JOIN customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID'

--What was the average quantity of products purchased per account in February? (Hint: just like question 3, we want the overall average, not the average for each account individually).
SELECT sum(quantity)/count(cust.acctnum)
FROM FebSales Feb
LEFT JOIN customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Charlotte answers
select sum(quantity)/count(cust.acctnum)
FROM FebSales Feb
LEFT JOIN customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID'

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT distinct Product, SUM(Quantity*price)
FROM JanSales;

--Charlotte answers; distinct not necessary; always 'group by'! (seems to help); use Order By to get the order, and Limit to see the singular product
SELECT product, sum(quantity*price)
FROM JanSales
GROUP BY product
ORDER BY sum(quantity*price) desc
LIMIT 1



